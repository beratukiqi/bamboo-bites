{
  "service": {
    "service": "bamboo-bites",
    "serviceObject": {
      "name": "bamboo-bites"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "profile": "fabiola-aws-dev",
      "region": "eu-north-1",
      "iam": {
        "role": "arn:aws:iam::818306886347:role/student-development-role"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetMenuLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/bamboo-bites-dev-getMenu"
            }
          },
          "GetOrdersLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/bamboo-bites-dev-getOrders"
            }
          },
          "PutOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/bamboo-bites-dev-putOrder"
            }
          },
          "GetSingleOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/bamboo-bites-dev-getSingleOrder"
            }
          },
          "GetOrdersByTimeStampLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/bamboo-bites-dev-getOrdersByTimeStamp"
            }
          },
          "GetMenuLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/bamboo-bites/dev/1700510085943-2023-11-20T19:54:45.943Z/getMenu.zip"
              },
              "Handler": "functions/getMenu/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "bamboo-bites-dev-getMenu",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::818306886347:role/student-development-role"
            },
            "DependsOn": [
              "GetMenuLogGroup"
            ]
          },
          "GetOrdersLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/bamboo-bites/dev/1700510085943-2023-11-20T19:54:45.943Z/getOrders.zip"
              },
              "Handler": "functions/getOrders/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "bamboo-bites-dev-getOrders",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::818306886347:role/student-development-role"
            },
            "DependsOn": [
              "GetOrdersLogGroup"
            ]
          },
          "PutOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/bamboo-bites/dev/1700510085943-2023-11-20T19:54:45.943Z/putOrder.zip"
              },
              "Handler": "functions/putOrder/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "bamboo-bites-dev-putOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::818306886347:role/student-development-role"
            },
            "DependsOn": [
              "PutOrderLogGroup"
            ]
          },
          "GetSingleOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/bamboo-bites/dev/1700510085943-2023-11-20T19:54:45.943Z/getSingleOrder.zip"
              },
              "Handler": "functions/getSingleOrder/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "bamboo-bites-dev-getSingleOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::818306886347:role/student-development-role"
            },
            "DependsOn": [
              "GetSingleOrderLogGroup"
            ]
          },
          "GetOrdersByTimeStampLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/bamboo-bites/dev/1700510085943-2023-11-20T19:54:45.943Z/getOrdersByTimeStamp.zip"
              },
              "Handler": "functions/getOrdersByTimeStamp/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "bamboo-bites-dev-getOrdersByTimeStamp",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::818306886347:role/student-development-role"
            },
            "DependsOn": [
              "GetOrdersByTimeStampLogGroup"
            ]
          },
          "GetMenuLambdaVersionV4nU7zalFStplhqSlxo67MGoMbNNgSEaKuKJHcPBTCY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetMenuLambdaFunction"
              },
              "CodeSha256": "JxP4XeVK+ck+qNm3Tp9SprNUb8Ey0GmtV7jJeWfNMyU="
            }
          },
          "GetOrdersLambdaVersionfeUOYr7n5ncW7TaTGb2mVlQbn7tr0Q5J2Zxd1D0fo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetOrdersLambdaFunction"
              },
              "CodeSha256": "DPFfMqiOWuX+wpD8GHc3ly4fCSgaR9gGQvLECALhnT8="
            }
          },
          "GetOrdersByTimeStampLambdaVersionf05OXufS6OVlPSxqAoETlaTAJYSVtUsrg5DPB0vgo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetOrdersByTimeStampLambdaFunction"
              },
              "CodeSha256": "+RVxZTI6gF0XhIm1fp2O0sUG1WXb1LHC7KpnoXZmpb0="
            }
          },
          "PutOrderLambdaVersionsuB7XiJyFYNCiMDiJHSmy79Qt1WpT2QiH4oAyVJTM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PutOrderLambdaFunction"
              },
              "CodeSha256": "ZmuYfeQQvJiQKTLR2/49a8OGRVvqtNUG7Nl5ep6lHnY="
            }
          },
          "GetSingleOrderLambdaVersioniJ04cAdGEzeFpZe62cmbNYliCchdDnmbEDkMUokI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetSingleOrderLambdaFunction"
              },
              "CodeSha256": "qND7rwkAqf9trvcN6Hq+uwEb0/TFuBP0GdohLGYXBQg="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-bamboo-bites",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetMenuLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetMenuLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetMenu": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMenuLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiMenu": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/menu",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetMenu"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetMenu"
          },
          "GetOrdersLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetOrdersLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetOrders": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetOrdersLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiOrders": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/orders",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetOrders"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetOrders"
          },
          "PutOrderLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PutOrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationPutOrder": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PutOrderLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiPutorder": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/putOrder",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationPutOrder"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationPutOrder"
          },
          "GetSingleOrderLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetSingleOrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetSingleOrder": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetSingleOrderLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiOrderOrdernrVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/order/{orderNr}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetSingleOrder"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetSingleOrder"
          },
          "GetOrdersByTimeStampLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetOrdersByTimeStampLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetOrdersByTimeStamp": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetOrdersByTimeStampLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiFilteredorders": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/filteredOrders",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetOrdersByTimeStamp"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetOrdersByTimeStamp"
          },
          "bambooBitesBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "bamboo-bites-bucket"
            }
          },
          "bambooBitesMenu": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bambooBites-menu",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "item",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "item",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "bambooBitesOrders": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bamboo-bites-ordersDb",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orderNr",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "timeStamp",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orderNr",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "timestampIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "timeStamp",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-bamboo-bites-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetMenuLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetMenuLambdaVersionV4nU7zalFStplhqSlxo67MGoMbNNgSEaKuKJHcPBTCY"
            },
            "Export": {
              "Name": "sls-bamboo-bites-dev-GetMenuLambdaFunctionQualifiedArn"
            }
          },
          "GetOrdersLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetOrdersLambdaVersionfeUOYr7n5ncW7TaTGb2mVlQbn7tr0Q5J2Zxd1D0fo"
            },
            "Export": {
              "Name": "sls-bamboo-bites-dev-GetOrdersLambdaFunctionQualifiedArn"
            }
          },
          "GetOrdersByTimeStampLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetOrdersByTimeStampLambdaVersionf05OXufS6OVlPSxqAoETlaTAJYSVtUsrg5DPB0vgo"
            },
            "Export": {
              "Name": "sls-bamboo-bites-dev-GetOrdersByTimeStampLambdaFunctionQualifiedArn"
            }
          },
          "PutOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PutOrderLambdaVersionsuB7XiJyFYNCiMDiJHSmy79Qt1WpT2QiH4oAyVJTM"
            },
            "Export": {
              "Name": "sls-bamboo-bites-dev-PutOrderLambdaFunctionQualifiedArn"
            }
          },
          "GetSingleOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetSingleOrderLambdaVersioniJ04cAdGEzeFpZe62cmbNYliCchdDnmbEDkMUokI"
            },
            "Export": {
              "Name": "sls-bamboo-bites-dev-GetSingleOrderLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-bamboo-bites-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-bamboo-bites-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "getMenu": {
        "handler": "functions/getMenu/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/menu",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/menu"
          }
        ],
        "name": "bamboo-bites-dev-getMenu",
        "package": {
          "artifact": ".serverless\\getMenu.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetMenuLambdaVersionV4nU7zalFStplhqSlxo67MGoMbNNgSEaKuKJHcPBTCY"
      },
      "getOrders": {
        "handler": "functions/getOrders/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/orders",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/orders"
          }
        ],
        "name": "bamboo-bites-dev-getOrders",
        "package": {
          "artifact": ".serverless\\getOrders.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetOrdersLambdaVersionfeUOYr7n5ncW7TaTGb2mVlQbn7tr0Q5J2Zxd1D0fo"
      },
      "putOrder": {
        "handler": "functions/putOrder/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/putOrder",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/putOrder"
          }
        ],
        "name": "bamboo-bites-dev-putOrder",
        "package": {
          "artifact": ".serverless\\putOrder.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "PutOrderLambdaVersionsuB7XiJyFYNCiMDiJHSmy79Qt1WpT2QiH4oAyVJTM"
      },
      "getSingleOrder": {
        "handler": "functions/getSingleOrder/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/order/{orderNr}",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/order/{orderNr}"
          }
        ],
        "name": "bamboo-bites-dev-getSingleOrder",
        "package": {
          "artifact": ".serverless\\getSingleOrder.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetSingleOrderLambdaVersioniJ04cAdGEzeFpZe62cmbNYliCchdDnmbEDkMUokI"
      },
      "getOrdersByTimeStamp": {
        "handler": "functions/getOrdersByTimeStamp/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/filteredOrders",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/filteredOrders"
          }
        ],
        "name": "bamboo-bites-dev-getOrdersByTimeStamp",
        "package": {
          "artifact": ".serverless\\getOrdersByTimeStamp.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetOrdersByTimeStampLambdaVersionf05OXufS6OVlPSxqAoETlaTAJYSVtUsrg5DPB0vgo"
      }
    },
    "resources": {
      "Resources": {
        "bambooBitesBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "bamboo-bites-bucket"
          }
        },
        "bambooBitesMenu": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "bambooBites-menu",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "item",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "item",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "bambooBitesOrders": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "bamboo-bites-ordersDb",
            "AttributeDefinitions": [
              {
                "AttributeName": "orderNr",
                "AttributeType": "N"
              },
              {
                "AttributeName": "timeStamp",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orderNr",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "timestampIndex",
                "KeySchema": [
                  {
                    "AttributeName": "timeStamp",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "bamboo-bites",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/bamboo-bites/dev/code-artifacts",
        "artifactDirectoryName": "serverless/bamboo-bites/dev/1700510085943-2023-11-20T19:54:45.943Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/bamboo-bites/dev/1700510085943-2023-11-20T19:54:45.943Z",
    "artifact": ""
  }
}